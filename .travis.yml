language: android
jdk: oraclejdk8

env:
  global:
    - ANDROID_API=28
    - ANDROID_BUILD_TOOLS=28.0.3
    - EMULATOR_API=24

android:
  components:
    - build-tools-$ANDROID_BUILD_TOOLS
    - android-$ANDROID_API
    - extra-android-support
    - extra-google-m2repository
    - extra-android-m2repository

    # Needed to run emulator(s)
    - android-$EMULATOR_API
    - sys-img-armeabi-v7a-android-$EMULATOR_API
  licenses:
    - '.+'

before_install:
  - yes | sdkmanager "platforms;android-28"

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

before_script:
  - ./gradlew assembleDebug assembleDebugAndroidTest
  - echo no | android create avd --force -n test -t android-$EMULATOR_API --abi armeabi-v7a
  - emulator -avd test -no-skin -no-window &
  - android-wait-for-emulator
  - while [ "`adb shell getprop sys.boot_completed | tr -d '\r' `" != "1" ] ; do sleep 1; done
  - adb shell input keyevent 82 &
  - ./gradlew installDebug installDebugAndroidTest

script:
  # PiracyCheckerTest
  - adb shell am instrument -w -e class com.github.javiersantos.piracychecker.PiracyCheckerTest com.github.javiersantos.piracychecker.demo.test/android.support.test.runner.AndroidJUnitRunner

  # UnauthorizedAppTest
  - unzip -P $SAMPLE_APP_PW app/src/androidTest/java/com/github/javiersantos/piracychecker/files/SampleUnauthorizedApp.zip
  - adb install SampleApp.apk
  - adb shell am instrument -w -e class com.github.javiersantos.piracychecker.UnauthorizedAppTest com.github.javiersantos.piracychecker.demo.test/android.support.test.runner.AndroidJUnitRunner

  # UnauthorizedAppUninstalledTest
  - adb uninstall $SAMPLE_APK_APK
  - adb shell am instrument -w -e class com.github.javiersantos.piracychecker.UnauthorizedAppUninstalledTest com.github.javiersantos.piracychecker.demo.test/android.support.test.runner.AndroidJUnitRunner
